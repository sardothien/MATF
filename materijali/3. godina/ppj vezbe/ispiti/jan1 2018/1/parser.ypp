%{
    #include<iostream>
    #include<cstdlib>
    #include<string>
    #include<cstring>
    #include"vektor.hpp"
    using namespace std;
    
    void yyerror(string s);
    extern int yylex();
    
    typedef struct {
        cvor* vektor;
        char* id;
    } Vek;
    
    Vek vektor[100];
    int br = 0;
    
    int postoji(char* s);
%}

%union {
    float vr;
    char *id;
    cvor* v;
}

%token PRINT DODELA UGAO EKV
%token<vr> BROJ
%token<id> ID

%type<v> izraz nizbrojeva

%left '+' '-'
%left '*'

%%
program : program naredba ';'
        | naredba ';'
        ;
        
naredba : ID DODELA izraz       {
                                    int k = postoji($1);
                                    if(k == -1){
                                        vektor[br].id = $1;
                                        vektor[br++].vektor = $3;
                                    }
                                    else
                                        vektor[k].vektor = $3;
                                }
        | izraz '.' izraz         { cout << skalarno($1, $3) << endl; }
        | '|' izraz '|'           { cout << norma($2) << endl; }
        | UGAO '(' izraz ',' izraz ')'  { cout << ugao($3, $5) << endl; }
        | EKV '(' izraz ',' izraz ')'   { jednaki($3, $5); } 
        | PRINT '(' izraz ')'   { 
                                    if($3 != nullptr)
                                        ispisi($3);
                                }
        ;
        
izraz : '<' nizbrojeva '>'        { $$ = $2; }
        | izraz '+' izraz         { $$ = saberi($1, $3); }
        | izraz '-' izraz         { $$ = oduzmi($1, $3); }
        | BROJ '*' izraz          { $$ = pomnozi($3, $1); }
        | ID                      { 
                                    int k = postoji($1);
                                    if(k == -1){
                                        cerr << "Ne postoji promenljiva!" << endl;
                                        $$ = nullptr;
                                    }
                                    else
                                        $$ = vektor[k].vektor;
                                  }
      ;
      
nizbrojeva : nizbrojeva ',' BROJ    { $$ = dodaj_na_kraj($1, $3); }
           | BROJ                   { $$ = dodaj_na_kraj(nullptr, $1); }
           ;
%%

void yyerror(string s){
    cerr << s << endl;
    exit(EXIT_FAILURE);
}

int postoji(char* s){
    if(br == 0)
        return -1;
    for(int i = 0; i < br; i++)
        if(strcmp(vektor[i].id, s) == 0)
            return i;
    return -1;
}

int main(){
    yyparse();
    
    return 0;
}
