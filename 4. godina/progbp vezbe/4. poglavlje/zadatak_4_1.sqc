/* Napisati:

    1. C/SQL program u kojem se naredbe izvršavaju dinamički 
       koji čita SQL naredbu iz datoteke čiji se naziv zadaje 
       kao prvi argument komandne linije. SQL naredba se čita 
       do pojave karaktera ; ili do kraja datoteke, ispisuje 
       se korisniku, a potom se izvršava. Pretpostaviti da 
       korisnik neće uneti naredbu SELECT, kao ni da neće 
       sadržati parametarske oznake. Pretpostaviti da naredba 
       koja se čita iz datoteke nije duža od 255 karaktera.

    2. Datoteku koja sadrži SQL naredbu koja povećava ESPB 
       bodove svim predmetima za 1. Izvršiti naredbu iz ove 
       datoteke napisanim programom.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
char naredba[256];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg) {
    if (sqlca.sqlcode < 0) {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n", sqlca.sqlcode, msg);
        printf("%s\n", Buffer);
        
        EXEC SQL ROLLBACK;
        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main(int argc, char** argv) {
    
    if(argc != 2) {
        fprintf(stderr, "./zadatak putanja_do_fajla\n");
        exit(EXIT_FAILURE);
    }
    
    FILE *in = fopen(argv[1], "r");
    if(in == NULL){
        fprintf(stderr, "Neuspesno otvaranje datoteke\n");
        exit(EXIT_FAILURE);        
    }
    
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("CONNECT TO");

    int c;
    unsigned brProcitanih = 0u;
    while(brProcitanih < sizeof(naredba)){
        c = fgetc(in);
        if(c == ';' || c == EOF)
            break;
        
        naredba[brProcitanih] = c;
        ++brProcitanih;
    }
    
    fclose(in);
    
    printf("Naredba:\n");
    printf("%s\n", naredba);
    
    EXEC SQL
        EXECUTE IMMEDIATE :naredba;
    checkSQL("Execute immediate");
    
    printf("Uspeh\n");
    
    EXEC SQL COMMIT;
    checkSQL("COMMIT - kraj programa");
    
    EXEC SQL CONNECT RESET;
    checkSQL("CONNECT RESET");
    
    return 0;
}
