/* Napisati C/SQL program kojim se omogućava nastavniku da unese naziv
 * predmeta, godinu roka i oznaku roka. Za svako polaganje datog predmeta
 * u datom ispitnom roku ponuditi nastavniku mogućnost da izmeni ocenu 
 * koju je student osvojio. Ispisati informacije o indeksu, imenu i 
 * prezimenu studenta kao i ocenu koju je dobio, pa zatražiti od nastavnika 
 * novu ocenu. Nakon unosa nove ocene, obavestiti nastavnika o uspešnosti
 * izmene i preći na naredno polaganje (ukoliko ih ima više). */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
char nazivPredmeta[151];
short godinaRoka;
char oznakaRoka[21];

sqlint32 indeks;
char ime[51];
char prezime[51];
short ocena;
short ocenaInd;
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg) {
    if (sqlca.sqlcode < 0) {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n", sqlca.sqlcode, msg);
        printf("%s\n", Buffer);
        
        EXEC SQL ROLLBACK;
        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() {
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("CONNECT TO");

    printf("Unesite naziv predmeta, oznaku i godinu roka:\n");
    fgets(nazivPredmeta, sizeof(nazivPredmeta), stdin);
    nazivPredmeta[strlen(nazivPredmeta)-1] = '\0';
    scanf("%s", oznakaRoka);
    scanf("%hd", &godinaRoka);
    
    EXEC SQL
        DECLARE cPolaganja CURSOR FOR
        SELECT I.INDEKS,
               (SELECT IME FROM DA.DOSIJE D WHERE D.INDEKS = I.INDEKS),
               (SELECT PREZIME FROM DA.DOSIJE D WHERE D.INDEKS = I.INDEKS),
               OCENA
        FROM DA.ISPIT I
        WHERE SKGODINA = :godinaRoka AND OZNAKAROKA = :oznakaRoka
            AND IDPREDMETA IN (SELECT ID
                               FROM DA.PREDMET P
                               WHERE NAZIV = :nazivPredmeta)
        FOR UPDATE OF OCENA;
    checkSQL("Declare");
    
    EXEC SQL 
        OPEN cPolaganja;
    checkSQL("Open");
    
    for(;;){
        EXEC SQL 
            FETCH cPolaganja
            INTO :indeks, :ime, :prezime, :ocena :ocenaInd;
        checkSQL("Fetch");
        
        if(SQLCODE == 100)
            break;
        
        if(ocenaInd < 0)
            continue;
        
        printf("%d - %s %s - %hd\n", indeks, ime, prezime, ocena);
        
        printf("Da li zelite da promenite ocenu? [d/n]\n");
        char odgovor = getchar();
        getchar();
        
        if(odgovor == 'd'){
            printf("Unesite novu ocenu:\n");
            scanf("%hd", &ocena);
            getchar();
            
            EXEC SQL 
                UPDATE DA.ISPIT
                SET OCENA = :ocena
                WHERE CURRENT OF cPolaganja;
            checkSQL("Update");
        }
    }
    
    EXEC SQL
        CLOSE cPolaganja;
    checkSQL("Close");
    
    EXEC SQL COMMIT;
    checkSQL("COMMIT - kraj programa");
    
    EXEC SQL CONNECT RESET;
    checkSQL("CONNECT RESET");
    
    return 0;
}
