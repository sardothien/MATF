/* Napisati C/SQL program koji ispisuje za svakog studenta ime, 
 * prezime, poslednji položeni ispit (naziv predmeta koji je 
 * položen), kao i datum polaganja tog ispita. */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
char ime[51];
char prezime[51];
char nazivPredmeta[151];
char datumPolaganja[11];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg) {
    if (sqlca.sqlcode < 0) {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n", sqlca.sqlcode, msg);
        printf("%s\n", Buffer);
        
        EXEC SQL ROLLBACK;
        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() {
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("CONNECT TO");

    EXEC SQL
        DECLARE cStudent CURSOR FOR
        SELECT IME, PREZIME, P.NAZIV, DATPOLAGANJA
        FROM DA.DOSIJE D JOIN DA.ISPIT I 
                ON D.INDEKS = I.INDEKS
            JOIN DA.PREDMET P
                ON P.ID = I.IDPREDMETA
        WHERE OCENA > 5 AND STATUS = 'o'
            AND DATPOLAGANJA IN (SELECT MAX(DATPOLAGANJA)
                                 FROM DA.ISPIT I1
                                 WHERE I1.INDEKS = D.INDEKS);
    checkSQL("Declare");
    
    EXEC SQL
        OPEN cStudent;
    checkSQL("Open");

    for(;;){
        EXEC SQL 
            FETCH cStudent
            INTO :ime, :prezime, :nazivPredmeta, :datumPolaganja;
        checkSQL("Fetch");
        
        if(SQLCODE == 100)
            break;
        
        printf("%s %s - %s (%s)\n", ime, prezime, nazivPredmeta, datumPolaganja);
    }
    
    EXEC SQL
        CLOSE cStudent;
    checkSQL("Close");
    
    EXEC SQL COMMIT;
    checkSQL("COMMIT - kraj programa");
    
    EXEC SQL CONNECT RESET;
    checkSQL("CONNECT RESET");
    
    return 0;
}
