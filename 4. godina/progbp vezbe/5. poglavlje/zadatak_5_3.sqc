/* Napisati C/SQL program kojim se za svaki ispitni rok, za koji 
 * postoji makar jedno polaganje, prvo ispisuju informacije o 
 * nazivu i godini roka, a zatim se korisnik pita da li želi 
 * da obriše sva polaganja za taj ispitni rok. Ukoliko želi, 
 * aplikacija izvršava brisanje i prikazuje poruku korisniku. 
 * Obrada jednog ispitnog roka predstavlja jednu transakciju. */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
short skGodina;
char naziv[31];
char oznaka[21];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg) {
    if (sqlca.sqlcode < 0) {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n", sqlca.sqlcode, msg);
        printf("%s\n", Buffer);
        
        EXEC SQL ROLLBACK;
        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() {
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("CONNECT TO");

    EXEC SQL 
        DECLARE cRokovi CURSOR WITH HOLD FOR
        SELECT NAZIV, SKGODINA, OZNAKAROKA
        FROM DA.ISPITNIROK IR
        WHERE EXISTS (SELECT *
                      FROM DA.ISPIT I
                      WHERE I.SKGODINA = IR.SKGODINA
                        AND I.OZNAKAROKA = IR.OZNAKAROKA);
    checkSQL("Declare");
    
    EXEC SQL 
        OPEN cRokovi;
    checkSQL("Open");
    
    for(;;){
        EXEC SQL 
            FETCH cRokovi
            INTO :naziv, :skGodina, :oznaka;
        checkSQL("Fetch");
        
        if(SQLCODE == 100) 
            break;
    
        printf("%s - %hd\n", naziv, skGodina);
    
        printf("Da li zelite da obrisete sva polaganja za ovaj ispitni rok? [d/n]\n");
        char odgovor = getchar();
        getchar();
        
        if(odgovor == 'd'){
            EXEC SQL 
                DELETE FROM DA.ISPIT
                WHERE SKGODINA = :skGodina AND OZNAKAROKA = :oznaka;
            checkSQL("Delete");
            
            printf("Uspesno brisanje\n");
        }
        
        EXEC SQL COMMIT;
        checkSQL("Commit");
    }
    
    EXEC SQL
        CLOSE cRokovi;
    checkSQL("Close");
    
    EXEC SQL COMMIT;
    checkSQL("COMMIT - kraj programa");
    
    EXEC SQL CONNECT RESET;
    checkSQL("CONNECT RESET");
    
    return 0;
}
