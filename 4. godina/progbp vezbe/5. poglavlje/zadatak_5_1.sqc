/* Napisati C/SQL program koji redom:

    1. Pronalazi i ispisuje najveći indeks iz tabele ISPIT.
    2. Briše studenta sa pronađenim indeksom iz tabele ISPIT i 
       ispisuje poruku korisniku o uspešnosti brisanja.
    3. Ponovo pronalazi i ispisuje najveći indeks iz tabele ISPIT.
    4. Pita korisnika da li želi da potvrdi ili poništi izmene. 
       U zavisnosti od korisnikovog odgovora, aplikacija potvrđuje
       ili poništava izmene uz ispisivanje poruke korisniku.
    5. Ponovo pronalazi i ispisuje najveći indeks iz tabele ISPIT.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 indeks;
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *msg) {
    if (sqlca.sqlcode < 0) {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n", sqlca.sqlcode, msg);
        printf("%s\n", Buffer);
        
        EXEC SQL ROLLBACK;
        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() {
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("CONNECT TO");

    // 1.
    EXEC SQL
        SELECT MAX(INDEKS)
        INTO :indeks
        FROM DA.ISPIT;
    checkSQL("Select 1");
    
    printf("1. %d\n", indeks);    
    
    // 2.
    EXEC SQL 
        DELETE FROM DA.ISPIT
        WHERE INDEKS = :indeks;
    checkSQL("Delete");
    
    printf("2. Uspesno brisanje\n");
    
    // 3.
    EXEC SQL
        SELECT MAX(INDEKS)
        INTO :indeks
        FROM DA.ISPIT;
    checkSQL("Select 2");
    
    printf("3. %d\n", indeks); 
    
    // 4.
    printf("4. Da li zelite da potvrdite izmene? [d/n]");
    char odgovor = getchar();
    if(odgovor == 'd'){
        EXEC SQL COMMIT;
        checkSQL("Commit");
        printf("\t Uspesno izvrsen commit\n");
    }
    else {
        EXEC SQL ROLLBACK;
        checkSQL("Rollback");
        printf("\t Uspesno izvrsen rollback\n");
    }
    
    // 5.
    EXEC SQL
        SELECT MAX(INDEKS)
        INTO :indeks
        FROM DA.ISPIT;
    checkSQL("Select 3");
    
    printf("5. %d\n", indeks); 
    
    EXEC SQL COMMIT;
    checkSQL("COMMIT - kraj programa");
    
    EXEC SQL CONNECT RESET;
    checkSQL("CONNECT RESET");
    
    return 0;
}
