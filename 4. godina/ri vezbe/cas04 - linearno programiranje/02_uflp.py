# -*- coding: utf-8 -*-
"""02_uflp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WdAenWkVlkBdU0VXZhx398qASHdfA-YF

**UFLP**
- skup korisnika I \\
- skup resursa J \\
- cena dodeljivanja korisnika i resursu j - $c_{ij}$ \\
- cena uspostavljanja resursa j - $f_j$ \\

Funkcija cilja (x i y su binarne promenljive): 
$$\sum_{i \in I} \sum_{j \in J} x_{ij}c_{ij} + \sum_{j \in J} y_jf_j $$
Ogranicenja:
$$ 1) \sum_{j \in J} x_{ij} = 1, \forall i \in I $$ \\
$$ 2) x_{ij} \leq y_j, \forall i \in I, \forall j \in J$$ \\
$$ 3) x_{ij} \in \{0, 1\}, y_j \in \{0, 1\}, \forall i \in I, \forall j \in J$$
"""

def readInput(filename):
    with open(filename, 'r') as f:
        numUsers, numResources = [int(x) for x in f.readline().split()]
        cost = [[int(x) for x in f.readline().split()] for i in range(numUsers)]
        fixedCost = [int(x) for x in f.readline().split()]
        return (numUsers, numResources, cost, fixedCost)

(numUsers, numResources, cost, fixedCost) = readInput('in.txt')

pip install docplex

from docplex.mp.model import Model

model = Model(name='uflp')

x = model.binary_var_matrix(numUsers, numResources, name='x')

y = model.binary_var_list(numResources, name='y')

# Ogranicenja #

model.add_constraints([sum([x[i, j] for j in range(numResources)]) == 1 for i in range(numUsers)])

for j in range(numResources):
    model.add_constraints([x[i,j] <= y[j] for i in range(numUsers)])

model.print_information()

first_sum = sum([sum([x[i,j]*cost[i][j] for j in range(numResources)]) for i in range(numUsers)])

second_sum = sum([y[j]*fixedCost[j] for j in range(numResources)])

model.minimize(first_sum+second_sum)

solution = model.solve()

solution.display()