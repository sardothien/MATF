# -*- coding: utf-8 -*-
"""01_telefoni.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s2NNuAd9xsvk5GhbO-I--9QmRiQ8Jy44

**Firma koja proizvodi 2 vrste telefona.** \\
Prva faza: fiksni - 0.2 sati, mobilni - 0.4 sati \\
Druga faza: fiksni - 0.5 sati, mobilni 0.4 sati \\
Od fiksnog zarade 12e, a od mobilnog 20e.\\
Odrediti broj fiksnih i mobilnih koje firma treba da proizvede da bi dobila max profit. \\
Ogranicenja: I faza <= 400 sati, II faza <= 490 sati, min 100 fiksnih i min 100 mobilnih
"""

from matplotlib import pyplot as plt
import numpy as np

# Vizuelizacija

# 100 fiksnih
plt.plot([100, 100], [0, 1000])
# 100 mobilnih
plt.plot([0, 1000], [100, 100])

# x - broj fiksnih, y - broj mobilnih

# I faza: x*0.2 + y*0.4 <= 400
x = np.arange(0, 1000)
y = (400-0.2*x) / 0.4
plt.plot(x, y)

# II faza: x*0.5 + y*0.4 <= 490
x = np.arange(0, 1000)
y = (490-0.5*x) / 0.4
plt.plot(x, y)

# Cena: x*12 + y*20 = c
c = 15000
y = (c-12*x) / 20
plt.plot(x, y)
# "guramo" ovu pravu ka gore sve dok smo u cetvorouglu
# -> tu je resenje

plt.xlabel('fiksni')
plt.ylabel('mobilni')
plt.show()

pip install docplex

from docplex.mp.model import Model

m = Model(name='proizvodnja telefona')

# fiksni
desk = m.continuous_var(name='desk')

# mobilni
cell = m.continuous_var(name='cell')

# Ogranicenja #

m.add_constraint(desk >= 100)

m.add_constraint(cell >= 100)

m.add_constraint(0.2*desk + 0.4*cell <= 400)

m.add_constraint(0.5*desk + 0.4*cell <= 490)

# Funkcija cilja #

m.maximize(12*desk + 20*cell)

m.print_information()

m.solve()

m.print_solution()