# -*- coding: utf-8 -*-
"""cas03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s6TVrk3_21Zr26Nw_q-TyH3YcdavAfid

**1. Izabran je uzorak sa verovatnoćama proporcionalnim veličini, sa ponavǉaǌem, obima 3 iz populacije veličine 10. Date su vrednosti obeležja izabranih elemenata i verovatnoće izbora:**

| i | $y_i$ | $\psi_i$ |
|---|-------|----------|
| 1 |   3   |   0.06   |
| 2 |   10  |   0.2    |
| 3 |   7   |   0.1    |

**a) Naći ocenu ukupne sume obeležja populacije koristeći Hansen−Hurwitz-ovu ocenu.**
"""

import statistics

n = 3
N = 10

Y = [3, 10, 7]
psi = [0.06, 0.2, 0.1]

t_HH = statistics.mean([ y/p for y,p in zip(Y, psi)])
print(t_HH)

"""**b) Oceniti disperziju te ocene.**"""

ocena_D_t_HH = 1/(n*(n-1)) * sum([ (y/p - t_HH)**2 for y,p in zip(Y, psi) ])
print(ocena_D_t_HH)

"""**c) Naći ocenu ukupne sume obeležja populacije koristeći Horvitz−Thompson-ovu ocenu.**"""

# verovatnoce ukljucenja i-te jedinki
pi_i = [ 1-(1-p)**n for p in psi ]
print(pi_i)

t_HT = sum([ y/pi for y,pi in zip(Y, pi_i) ])
print(t_HT)

"""**d) Oceniti disperziju te ocene.**"""

sum1 = sum([ ((1/pi**2 - 1/pi) * y**2) for y,pi in zip(Y, pi_i) ])

sum2 = 0.0
for i in range(n):
    for j in range(n):
        if i != j:
            pi_ij = pi_i[i] + pi_i[j] - 1 + (1 - psi[i] - psi[j])**n
            sum2 += (1/(pi_i[i]*pi_i[j]) - (1/pi_ij)) * Y[i]*Y[j]

ocena_D_t_HT = sum1 + sum2
print(ocena_D_t_HT)

"""**2. Za ispitivaǌe zagađenosti 320 jezera ukupne površine $80km^2$ izabran je uzorak sa ponavǉaǌem obima 4 sa verovatnoćama proporcionalnim površini jezera. Prvo jezero iz uzorka birano je dva puta, a drugo i treće po jednom. Koncentracija zagađenosti u ta tri jezera u uzorku je redom 2,5 i 10(mg/l), a površine tih jezera (u $km^2$) su redom 1.2,0.2 i 0.5. Naći Hansen− Hurwitz-ovu ocenu sredǌeg zagađeǌa po jezeru u posmatranoj populaciji, kao i ocenu disperzije dobijene ocene.**"""

N = 320
n = 4
M = 80

uzorak = [1, 1, 2, 3] # prvo je birano dva puta

Y = [2, 2, 5, 10]

Mi = [1.2, 1.2, 0.2, 0.5]

psi = [ m / M for m in Mi ]
print(psi)

m_HH = statistics.mean([ y/p for y,p in zip(Y, psi) ]) / N
print(m_HH)

t_HH = statistics.mean([ y/p for y,p in zip(Y,psi) ])
ocena_D_t_HH = 1/(n*(n-1)) * sum([ (y/p - t_HH)**2 for y,p in zip(Y, psi)])

ocena_D_m_HH = ocena_D_t_HH / N**2
print(ocena_D_m_HH)

"""**3. Iz populacije koju čine tri poǉa na kojima se uzgaja pšenica bira se uzorak obima 2 sa verovatnoćama proporcionalnim veličinama, sa ponavǉaǌem. U sledećoj tabeli su dati podaci o količini proizvedene pšenice na svakom poǉu i verovatnoće izbora svakog poǉa.**

| i | $y_i$ | $\psi_i$ |
|---|-------|----------|
| 1 |   11  |   0.3    |
| 2 |   6   |   0.2    |
| 3 |  25   |   0.5    |

**Naći Hansen−Hurwitz-ovu i Horvitz−Thompson-ovu ocenu za ukupnu proizvodǌu pšenice za svaki uzorak.**
"""

N = 3
n = 2

populacija = [1, 2, 3]
Y = [11, 6, 25]
psi = [0.3, 0.2, 0.5]

# svi uzorci ponavljanja obima 2
uzorci = []
for i in range(1,N+1):
    for j in range(1,N+1):
        uzorci.append([i,j])

print(len(uzorci))
print(uzorci)

# t_HH za svaki uzorak
t_HH = []
for i in range(len(uzorci)):
    t_HH.append( (Y[uzorci[i][0]-1]/psi[uzorci[i][0]-1] + Y[uzorci[i][1]-1]/psi[uzorci[i][1]-1]) / n )

print(t_HH)

pi_i = [ 1-(1-p)**n for p in psi ]
print(pi_i)

t_HT = []
for i in range(len(uzorci)):
    if uzorci[i][0] == uzorci[i][1]:
        t_HT.append( Y[uzorci[i][0]-1]/pi_i[uzorci[i][0]-1] )
    else:    
        t_HT.append( (Y[uzorci[i][0]-1]/pi_i[uzorci[i][0]-1] + Y[uzorci[i][1]-1]/pi_i[uzorci[i][1]-1]) )

print(t_HT)

"""**4. U datoteci radnici.txt dati su podaci o broju radnika i proizvodǌi u 10 fabrika u industrijskoj zoni. Izabrati uzorak obima 3 sa ponavǉaǌem sa verovatnoćama izbora proporcionalnim broju radnika u fabrici. Koristeći dobijeni uzorak odrediti Hansen−Hurwitz-ovu ocenu ukupne proizvodǌe.**"""

import pandas as pd
import random

n = 3
N = 10

dat = pd.read_csv("radnici.txt", sep=" ")
dat

populacija = list(range(1,11))
Mi = dat["br_radnika"]
M = sum(Mi)

psi = [ m/M for m in Mi ]
print(psi)

uzorak = random.choices(populacija, k=n, weights=psi)
uzorak

Y = dat["proizvodnja"]
print(Y)

pom = []
for i in range(len(uzorak)):
    pom.append(Y[uzorak[i]] / psi[uzorak[i]-1])

t_HH = statistics.mean(pom)
t_HH

"""**5. Data je populacija od četiri prašume, ǌihove površine i brojevi tigrova koji žive u ǌima:**

| prašuma | površina u $km^2$ | broj tigrova |
|---------|-------------------|--------------|
|     1   |         100       |      11      |
|     2   |         200       |      20      |
|     3   |         300       |      23      |
|     4   |         500       |      54      |

**Na osnovu uzorka (1,2) oceniti ukupan broj tigrova, odrediti disperziju te ocene i naći ocenu te disperzije ako je uzorkovaǌe vršeno sa ponavljanjem sa verovatnoćama proporcionalnim površini prašume. Koristiti Hansen−Hurwitz-ovu ocenu.**
"""

N = 4
n = 2

Y = [11, 20, 23, 54]
Mi = [100, 200, 300, 500]
M = sum(Mi)

psi = [ m/M for m in Mi ]
print(psi)

uzorak = [1,2]

t_HH = (Y[uzorak[0]-1]/psi[uzorak[0]-1] + Y[uzorak[1]-1]/psi[uzorak[1]-1]) / n
print(t_HH)

t = sum(Y)
print(t)

D_t_HH = 1/n * sum([ p*(y/p - t)**2 for y,p in zip(Y, psi) ])
print(D_t_HH)

ocena_D_t_HH = ((Y[uzorak[0]-1]/psi[uzorak[0]-1] - t_HH)**2 + (Y[uzorak[1]-1]/psi[uzorak[1]-1] - t_HH)**2) / (n*(n-1))
print(ocena_D_t_HH)

"""**6. Populaciju čini baza trees koja sadrži podatke o 31 drvetu. Izabrati uzorak sa ponavǉaǌem obima 10 sa verovatnoćama proporcionalnim obimu stabla (promenǉiva Girth) i oceniti sredǌu vrednost obeležja Volume koristeći Hansen−Hurwitz-ovu ocenu.**"""

dat = pd.read_csv("trees.txt", sep=" ")
dat.head()

N = 31
n = 10

populacija = list(range(1, 32))
Y = dat["Volume"]

Mi = dat["Girth"]
M = sum(Mi)
psi = [ m/M for m in Mi ]
print(psi)

uzorak = random.choices(populacija, k=n, weights=psi)
uzorak

suma = 0.0
for i in range(len(uzorak)):
    suma += Y[uzorak[i]] / psi[uzorak[i]-1]

m_HH = suma / (N*n)
print(m_HH)