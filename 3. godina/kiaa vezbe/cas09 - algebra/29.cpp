/* Билијарски сто је правоугаоног облика димензије m×n и има четири
 * рупе у ћошковима. Посматрајмо цртеж стола, такав да му је ширина m,
 * а висина n. Лоптица се удара из доњег левог угла (поља са координатама
 * (0, 0)) дуж линије која је под углом од 45 степени у односу на ивице
 * стола. Ако претпоставимо да лоптица не успорава своје кретање, да се
 * од сваке се ивице одбија под углом од 45, да је веома мала и да у рупу
 * упада само ако су јој координате центра једнаке координати рупе, напиши
 * програм који одређује у коју рупу ће после неког времена упасти, као и
 * колико ће се пута пре тога одбити о ивице стола. */

#include<iostream>
using namespace std;

int nzd(int a, int b){
    while(b > 0){
        int ost = a % b;
        a = b;
        b = ost;
    }
    
    return a;
}

int main(){
    
    int m, n;
    cin >> m >> n;
    
    int N = nzd(m, n);
    
    int nx = n / N, ny = m / N;
    int x = nx % 2 == 0 ? 0 : m;
    int y = ny % 2 == 0 ? 0 : n;
    
    cout << x << " " << y << endl;
    cout << (nx - 1) + (ny - 1) << endl;
    
    return 0;
}
